-extends 'smartmin/form.html'
-load smartmin
-load i18n

-block form-span
  span8

-block fields
  .field.subscribed-events
    .field-label
      -trans "Subscribed Events"
    .field-input
      .hidden-input.hide
        <input type="checkbox" id="mo_sms" name="mo_sms" {% if org.is_notified_of_mo_sms %}checked{% endif %}>
      .glyph.notif-checkbox
      %label{ for:'mo_sms' }
        -trans "Incoming Messages"
    .field-input
      .hidden-input.hide
        <input type="checkbox" id="mt_sms" name="mt_sms" {% if org.is_notified_of_mt_sms %}checked{% endif %}>
      .glyph.notif-checkbox
      %label{ for:'mt_sms' }
        -trans "Outgoing Messages"
    .field-input
      .hidden-input.hide
        <input type="checkbox" id="mo_call" name="mo_call" {% if org.is_notified_of_mo_call %}checked{% endif %}>
      .glyph.notif-checkbox
      %label{ for:'mo_call' }
        -trans "Incoming Calls"
    .field-input
      .hidden-input.hide
        <input type="checkbox" id="mt_call" name="mt_call" {% if org.is_notified_of_mt_call %}checked{% endif %}>
      .glyph.notif-checkbox
      %label{ for:'mt_call' }
        -trans "Outgoing Calls"
    .field-input
      .hidden-input.hide
        <input type="checkbox" id="alarm" name="alarm" {% if org.is_notified_of_alarms %}checked{% endif %}>
      .glyph.notif-checkbox
      %label{ for:'alarm' }
        -trans "Channel Alarms (low battery, loss of connectivity)"

-block summary
  -blocktrans
    Personaliza la salida de los mensajes en estos canales.

-block extra-script
  {{block.super}}
    :javascript
      $(function() {
        var boxes = $(".field-input");
        boxes.each(function() {
          var list_input = $(this).children().children("input[type='checkbox']");
          if (list_input[0].checked) {
            $(this).addClass("checked");
          } else {
            $(this).removeClass("checked");
          }
        });
      });

      $(function() {
        $(".field-input .glyph").on('click', function(){
          var cell = $(this).parent(".field-input");
          var ipt = cell.children().children("input[type='checkbox']");

          if (cell.hasClass("checked")) {
            cell.removeClass("checked");
            ipt.attr('checked', false);
          } else {
            cell.addClass("checked");
            ipt.attr('checked', true);
          }
        });
      });
      $(function() {
        $(".expand").on('click', function(){
          var fieldset = $(this).parent(".field");
          var fields = fieldset.children("div");

          if (fields.hasClass("hide")) {
            fields.removeClass("hide");
          } else {
            fields.addClass("hide");
          }
        });
      });

      function addHeaderPair(){
        // check if the last id_header_*_key input element has a value
        if ($("input[id^=id_header]input[id$=key]").last().attr('value')){
          // add markup with incremented ids/names
          var numPairs = $(".field.webhook-headers").children(".field.webhook-header-pair").length

          var ele = $('.templates > .webhook-header-pair').clone();

          ele.find('label').each(function(){
            var label = $(this).attr('for');
            $(this).attr('for', label.replace(/0/g, numPairs + 1));
          });
          ele.find('input').each(function(){
            var id = $(this).attr('id');
              $(this).attr('id', id.replace(/0/g, numPairs + 1));
            var name = $(this).attr('name');
              $(this).attr('name', name.replace(/0/g, numPairs + 1));
          });

          $(".field.webhook-headers").append(ele);
          ele.toggleClass('hide');

          // attach event listener to newly created webhook-header-pair, so that
          // another pair can be subsequently added after the new one has a value
          ele.on('focusin', addHeaderPair);
        };
      };

      function refreshToken(){
         $.post("{% url 'api.apitoken_refresh' %}", function(data){
            $("#api_token").text(data['token']);
         });
      }

      $(function() {
        $(".field.webhook-header-pair").on('focusin', addHeaderPair);
      });


-block extra-style
  :css

    .field.webhook-url .control-label {
       display: block;
       float: none;
       text-align: left;
    }

    .field.webhook-url .controls {
      margin-left: 0px;
    }

    .field.header-key  {
       float: left;
       text-align: left;
       margin-right: 10px;
    }

    .field.header-value {
       text-align: left;
    }

    .subscribed-events {
      margin-top: 10px;
      margin-bottom: 10px;
    }

    .subscribed-events .field-label {
      font-weight: normal;
      margin-bottom: 3px;
    }

    .subscribed-events .field-input label {
      display: inline;
      height: 22x;
      font-weight: 200;
      line-height:25px;
    }

    .subscribed-events .field-input input[type="checkbox"] {
      height: 22px;
      margin-top: 0px;
    }

    .api-token-refresh {
      padding-left: 5px;
      color: #999;
    }
